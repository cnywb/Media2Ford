<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
					http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
					http://www.springframework.org/schema/context 
					http://www.springframework.org/schema/context/spring-context-3.0.xsd
					http://www.springframework.org/schema/tx 
					http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<!-- webservice config start -->
	<import resource="classpath:org/codehaus/xfire/spring/xfire.xml" />

	<bean id="webAnnotations"
		class="org.codehaus.xfire.annotations.jsr181.Jsr181WebAnnotations" />

	<bean id="jsr181HandlerMapping" class="org.codehaus.xfire.spring.remoting.Jsr181HandlerMapping">
		<property name="xfire" ref="xfire" />
		<property name="webAnnotations" ref="webAnnotations" />
	</bean>

	<bean id="media2fordService" class="com.agenda.api.service.impl.Media2FordServiceImpl" />

	<!--
		<bean id="Media2FordData"
		class="org.codehaus.xfire.spring.remoting.XFireExporter"> <property
		name="serviceFactory" ref="xfire.serviceFactory" /> <property
		name="xfire" ref="xfire" /> <property name="serviceBean"
		ref="media2fordService" /> <property name="serviceClass"
		value="com.agenda.api.service.Media2FordService" /> </bean> <bean
		id="media2fordService"
		class="com.agenda.api.service.impl.Media2FordServiceImpl"/>
	-->

	<!-- webservice config end -->

	<!-- database start -->
	
	<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    	<property name="location">
    		<value>classpath:jdbc.properties</value>
    		<!--
			<value>/WEB-INF/jdbc.properties</value>
			-->
		</property>
	</bean>	
	
	<bean id="dataSource" class="com.agenda.util.MyProxoolDataSource">
		<property name="driver" value="${db.driver}" />
		<property name="driverUrl" value="${db.url}"/>
		<property name="user" value="${db.user}"/>
		<property name="password" value="${db.password}"/>
    	<property name="alias" value="${db.alias}"/>
    	<property name="houseKeepingTestSql" value="${db.houseKeepingTestSql}"/>
    	<property name="maximumConnectionCount" value="${db.maximumConnectionCount}"/>
    	<property name="minimumConnectionCount" value="${db.minimumConnectionCount}"/>
	</bean>

	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="annotatedClasses">
			<list>
			<value>com.agenda.api.entity.M2FUserData</value>
			<value>com.agenda.api.entity.M2FEntrance</value>
			<value>com.agenda.api.entity.M2FErrorUserData</value>
			</list>
		</property>
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle10gDialect</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.jdbc.fetch_size">50</prop>
				<prop key="hibernate.query.substitutions">true 1, false 0</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="hibernate.cache.use_structured_entries">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path"></prop>
			</props>
		</property>
	</bean>
	<!-- database end -->
	
	<!-- 事务配置 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	
	<!-- 支持 @Transactional 标记 -->
	<tx:annotation-driven proxy-target-class="true" transaction-manager="txManager"/>
	
	<!-- 使用annotation定义事务 -->
	<tx:annotation-driven transaction-manager="txManager" />
 
	<!-- 使用annotation 自动注册bean,并检查@Required,@Autowired的属性已被注入 -->
	<context:annotation-config/> 
	<context:component-scan base-package="com.agenda" />
	
</beans>